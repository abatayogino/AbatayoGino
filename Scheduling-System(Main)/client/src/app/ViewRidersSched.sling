import jk.widget.common
import jk.widget.datagrid

class #widget:

ui LayerWidget
{
	CanvasWidget {
		color = Color.forString("#CCCCCC")
	}
	VerticalBoxWidget {
		margin = context.getHeightValue("1mm")
		spacing = context.getHeightValue("1mm")
		DataGridWidget grid : 1.0 {
		}
        LabelWidget {
					text = "RIDERS SCHEDULE"
					textColor = Color.black()
					fontSize = context.getHeightValue("10mm")
					textAlign = LabelWidget.ALIGN_CENTER
					fontBold = true
				}
		
        ButtonWidget {
			text = "Back To Riders Form"
			clickHandler = func {
			NavigationWidget.switchToContainer(this, new RidersForm(context))

			}
		}
	}
}

func initializeWidget override
{
	base.initializeWidget()
	grid.addColumn("Firstname", "fname", 1.0)
	grid.addColumn("MiddleName", "mname", 1.0)
    grid.addColumn("LastName", "lname", 1.0)
    grid.addColumn("Date", "date", 1.0)
    grid.addColumn("Time", "time", 1.0)
	grid.addWidgetHeaderRow()
	 APIClient.getInstance().getRiderschedules(func(resp as DynamicMap){
        var data = assert resp.getDynamicMap("data")
        var records = data.getDynamicVector("records")
        if not records || records.getSize() < 1{
            grid.addRow([ "No Records Found" ])
        }
        else {
            foreach record as DynamicMap in records.toVector() {
                var ridername = record.getString("firstname") .. " " .. record.getString("middlename") .. " " .. record.getString("lastname") .. " " .. record.getString("time") .. " " .. record.getString("date")
                grid.addRow([ 
                    
                    record.getString("firstname"), 
                    record.getString("middlename"), 
                    record.getString("lastname"),
					record.getString("date"),
					record.getString("time")
					])
            }
        }
    },func(err as Error){
        grid.addRow([ "Error Getting Data" ])
    })
}
